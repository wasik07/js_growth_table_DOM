{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCKA,IAAM,EAAU,CACd,IAAK,SAAC,CAAN,EACE,OAAA,EAAK,QAAQ,CAAC,MAAM,CALN,IAMd,EAAK,WAAW,CAAC,EAAK,gBAAgB,CAAC,SAAS,CAAC,CAAA,G,EACnD,OAAQ,SAAC,CAAT,EAAkB,OAAA,EAAK,gBAAgB,CAAC,MAAM,E,EAC9C,IAAK,SAAC,CAAA,CAAK,CAAX,EAAqB,OAAA,EAAM,EAAQ,GAAG,CAAC,GAAQ,EAAQ,MAAM,CAAC,E,CAChE,EAEM,EAAW,SAAC,CAAA,CAAS,CAA3B,EACE,IAAM,EAAS,EAAK,SAAS,CAAC,QAAQ,CAAC,UACjC,EAAS,EAAK,SAAS,CAAC,QAAQ,CAAC,UAEvC,OAAQ,CAAA,GACN,KAAK,GAhBS,IAgBe,EAI7B,KAAK,AAnBS,IAmBT,GAAyB,EAH5B,EAAK,QAAQ,CAAG,CAAA,EAChB,KAMF,SACE,EAAK,QAAQ,CAAG,CAAA,CACpB,CACF,EAEM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAU,OAAO,CAAG,SAAC,CAArB,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,SAAS,CAC3B,EAAM,EAAO,QAAQ,CAAC,UAE5B,GAAI,EAAO,QAAQ,CAAC,UAAW,CAC5B,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,EAAM,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAE,OAAO,CAAC,SAAC,CAA5B,EAAmC,OAAA,EAAQ,GAAG,CAAC,EAAK,E,GAErD,I,EAAM,EAAe,EAAM,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAE3D,EACG,gBAAgB,CAAC,kCACjB,OAAO,CAAC,SAAC,CAFZ,EAEgC,OAAA,EAAS,EAAc,E,EACzD,MAAO,GAAI,EAAO,QAAQ,CAAC,OAAQ,CACjC,EAAQ,GAAG,CAAC,EAAK,GAEjB,IAAM,EAAY,EAAM,QAAQ,CAAC,MAAM,CAEvC,EACG,gBAAgB,CAAC,4BACjB,OAAO,CAAC,SAAC,CAFZ,EAEgC,OAAA,EAAS,EAAW,E,EACtD,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar MAX_ITEMS = 10;\nvar MIN_ITEMS = 2;\nvar element = {\n    add: function(item) {\n        return item.children.length < MAX_ITEMS && item.appendChild(item.lastElementChild.cloneNode(true));\n    },\n    remove: function(item) {\n        return item.lastElementChild.remove();\n    },\n    set: function(add, item) {\n        return add ? element.add(item) : element.remove(item);\n    }\n};\nvar isButton = function(lengths, item) {\n    var remove = item.className.includes(\"remove\");\n    var append = item.className.includes(\"append\");\n    switch(true){\n        case lengths >= MAX_ITEMS && append:\n            item.disabled = true;\n            break;\n        case lengths === MIN_ITEMS && remove:\n            item.disabled = true;\n            break;\n        default:\n            item.disabled = false;\n    }\n};\nvar container = document.querySelector(\".container\");\nvar table = document.querySelector(\"tbody\");\ncontainer.onclick = function(e) {\n    var button = e.target.className;\n    var add = button.includes(\"append\");\n    if (button.includes(\"column\")) {\n        _to_consumable_array(table.children).forEach(function(tr) {\n            return element.set(add, tr);\n        });\n        var lengthColumn = table.lastElementChild.children.length;\n        container.querySelectorAll(\".append-column, .remove-column\").forEach(function(buttonForOption) {\n            return isButton(lengthColumn, buttonForOption);\n        });\n    } else if (button.includes(\"row\")) {\n        element.set(add, table);\n        var lengthRow = table.children.length;\n        container.querySelectorAll(\".append-row, .remove-row\").forEach(function(buttonForOption) {\n            return isButton(lengthRow, buttonForOption);\n        });\n    }\n};\n\n//# sourceMappingURL=index.08e6133e.js.map\n","'use strict';\n\nconst MAX_ITEMS = 10;\nconst MIN_ITEMS = 2;\n\nconst element = {\n  add: (item) =>\n    item.children.length < MAX_ITEMS &&\n    item.appendChild(item.lastElementChild.cloneNode(true)),\n  remove: (item) => item.lastElementChild.remove(),\n  set: (add, item) => (add ? element.add(item) : element.remove(item)),\n};\n\nconst isButton = (lengths, item) => {\n  const remove = item.className.includes('remove');\n  const append = item.className.includes('append');\n\n  switch (true) {\n    case lengths >= MAX_ITEMS && append:\n      item.disabled = true;\n      break;\n\n    case lengths === MIN_ITEMS && remove:\n      item.disabled = true;\n      break;\n\n    default:\n      item.disabled = false;\n  }\n};\n\nconst container = document.querySelector('.container');\nconst table = document.querySelector('tbody');\n\ncontainer.onclick = (e) => {\n  const button = e.target.className;\n  const add = button.includes('append');\n\n  if (button.includes('column')) {\n    [...table.children].forEach((tr) => element.set(add, tr));\n\n    const lengthColumn = table.lastElementChild.children.length;\n\n    container\n      .querySelectorAll('.append-column, .remove-column')\n      .forEach((buttonForOption) => isButton(lengthColumn, buttonForOption));\n  } else if (button.includes('row')) {\n    element.set(add, table);\n\n    const lengthRow = table.children.length;\n\n    container\n      .querySelectorAll('.append-row, .remove-row')\n      .forEach((buttonForOption) => isButton(lengthRow, buttonForOption));\n  }\n};\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","element","add","item","children","appendChild","lastElementChild","cloneNode","remove","set","isButton","lengths","className","includes","append","disabled","container","document","querySelector","table","onclick","e","button","target","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","tr","lengthColumn","querySelectorAll","buttonForOption","lengthRow"],"version":3,"file":"index.08e6133e.js.map"}